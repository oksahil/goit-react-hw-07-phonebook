{"version":3,"file":"static/js/706.4609d89f.chunk.js","mappings":"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","sources":["components/redux/phones/phones-selectors.js","components/MyPhone/MyPhoneForm/initialState.js","webpack://react-homework-template/./src/shared/component/Button/button.module.css?5ed7","shared/component/Button/Button.jsx","webpack://react-homework-template/./src/components/MyPhone/MyPhoneForm/myPhoneForm.module.css?fe1d","components/MyPhone/MyPhoneForm/MyPhoneForm.jsx","webpack://react-homework-template/./src/components/MyPhone/ContactsList/contactsList.module.css?3efd","components/MyPhone/ContactsList/ContactsList.jsx","components/redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/MyPhone/MyPhoneFilter/myPhoneFilter.module.css?0fb8","components/MyPhone/MyPhoneFilter/MyPhoneFilter.jsx","webpack://react-homework-template/./src/components/MyPhone/myPhone.module.css?00b6","components/MyPhone/MyPhone.jsx","page/AllPhonePage/AllPhonePage.jsx","webpack://react-homework-template/./src/shared/component/Message/message.module.css?120f","shared/component/Message/Message.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["export const getAllPhones = store => store.phones;\n\nexport const getHomePhones = ({phones}) => {\n    const homePhones = phones.filter(({ home }) => home);\n    return homePhones;\n};\n\nexport const getWorkPhones = ({phones}) => {\n    const workPhones = phones.filter(({ work }) => work);\n    return workPhones;\n};\n\nexport const filterContacts = ({ phones, filter }) => {\nif (!filter) {\n        return phones;\n    }\n    const normFilter = filter.toLowerCase();\n    const result = phones.filter(({ name, number }) => {\n        return (name.toLowerCase().includes(normFilter) || number.toLowerCase().includes(normFilter))\n    })\n    return result;    \n}\n","const inititalState = {\n    name: \"\",\n    number: \"\",\n    home: false,\n    work: false,\n}\n\nexport default inititalState;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__r1lcq\"};","import PropTypes from \"prop-types\";\n\nimport css from \"./button.module.css\";\n\nconst Button = ({children, onClick, type}) => {\n    return <button onClick={onClick} className={css.btn} type={type}>{children}</button>\n}\n\nexport default Button;\n\nButton.defaultProps = {\n    type: \"button\",\n}\n\nButton.prototypes = {\n    onClick: PropTypes.func,\n    type: PropTypes.oneOf(['submit', 'button', 'reset']),\n    children: PropTypes.element.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"labelText\":\"myPhoneForm_labelText__Hcazb\",\"inputText\":\"myPhoneForm_inputText__0eLWy\",\"formInput\":\"myPhoneForm_formInput__FxZfl\",\"formData\":\"myPhoneForm_formData__KPR7t\",\"inputCheck\":\"myPhoneForm_inputCheck__vsbNm\"};","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { getAllPhones } from \"./../../redux/phones/phones-selectors\";\nimport { addContact } from \"./../../redux/phones/phones-slice\";\nimport initialState from \"./initialState\";\n\nimport Button from \"./../../../shared/component/Button/Button\";\n\nimport css from \"./myPhoneForm.module.css\";\n\nconst MyPhoneForm = () => {\n    const [state, setState] = useState({ ...initialState });\n    const allPhones = useSelector(getAllPhones);\n    const dispatch = useDispatch();\n    \nconst isDublicate = (name, number)=> {\n    const normName = name.toLowerCase();\n    const normNumber = number.toLowerCase();\n    const person = allPhones.find(({ name, number }) => {\n        return (name.toLowerCase() === normName || number.toLowerCase() === normNumber)\n    })\n    return Boolean(person)\n    }  \n\nconst handleChange = ({target}) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === \"checkbox\" ? checked : value;\n    setState(prevState => {\n        return { ...prevState, [name]: newValue };\n    })\n}\n    \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isDublicate(name, number)) {\n      return alert(`${name} or ${number} is already ixist`);\n    } else {\n      dispatch(addContact({ name, number, home, work }));\n      \n      };\n      setState(initialState);\n  };    \n\nconst { name, number, home, work } = state;\n    \nreturn (\n         <form action=\"\" onSubmit={handleSubmit} className={css.formData}>\n            <div className={css.formInput}>\n            <label className={css.labelText}>Name:</label>\n            <input className={css.inputText}\n                    onChange={handleChange}\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                placeholder=\"Name Last name\"    \n                required\n                />\n            </div>\n            <div className={css.formInput}>\n                <label className={css.labelText}>Number:</label>\n                <input className={css.inputText}\n                    onChange={handleChange}\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    placeholder=\"+000-00-000-00-00\"    \n                    required\n                />\n        </div>\n        <div className={css.formInput}>\n                <label className={css.labelText}>Home:</label>\n                <input  className={css.inputCheck}\n                    onChange={handleChange}\n                    type=\"checkbox\"\n                    name=\"home\"\n                    checked={home}\n                    title=\"HomePhone\"\n                />\n            <label className={css.labelText}>Work:</label>\n                <input\n                    onChange={handleChange}\n                    type=\"checkbox\"\n                    name=\"work\"\n                    checked={work}\n                    title=\"WorkPhone\"\n                />\n            </div>\n            <Button type=\"submit\">Add contact</Button>\n        </form>\n        )\n}\n\nexport default MyPhoneForm;","// extracted by mini-css-extract-plugin\nexport default {\"textItem\":\"contactsList_textItem__qlHuq\",\"textContact\":\"contactsList_textContact__86vmn\",\"listContact\":\"contactsList_listContact__4hB-z\",\"pictH\":\"contactsList_pictH__Gbhaj\",\"pictW\":\"contactsList_pictW__RHdkk\"};","import { useSelector, useDispatch} from \"react-redux\";\n\nimport { filterContacts } from \"./../../redux/phones/phones-selectors\";\nimport { deleteContact } from \"components/redux/phones/phones-slice\";\n\nimport Button from \"./../../../shared/component/Button/Button\";\nimport Message from \"shared/component/Message/Message\";\n\n\nimport css from \"./contactsList.module.css\"\n\nconst ContactsList = () => {\n    const contacts = useSelector(filterContacts);\n    const dispatch = useDispatch();\n\n    const phone = contacts.map(({ id, name, number, home, work }) =>\n        <li key={id} className={css.textItem}>\n        <div>    {home ?\n                <span className={css.textContact}><span className={css.pictH}>H</span> {name}    {number}</span> :\n                <span className={css.textContact}>{name} {number}</span> &&\n                    work ? \n                <span className={css.textContact}><span className={css.pictW}>W</span> {name}    {number}</span> :\n                <span className={css.textContact}>{name} {number}</span>    \n            }\n            </div>\n            <div>\n                <Button onClick={() => removeContact(id)} type=\"button\">delete</Button>\n                </div>\n        </li>);\n    \n        const removeContact = (id) => {\n        const action = deleteContact(id);\n        dispatch(action);\n    };\n    const phonesFilter = useSelector(filterContacts);\n    const isPerson = Boolean(phonesFilter.length);\n    return (\n        <ul className={css.listContact}>\n                                 {isPerson && phone}\n                        {!isPerson && <Message message=\"No person in contacts list\" />}\n\n           \n        </ul>        \n    )\n}\n\nexport default ContactsList;\n\nContactsList.defaultPrors = {\n    contacts: []\n}","export const getFilter = ({filter}) => filter;","// extracted by mini-css-extract-plugin\nexport default {\"labelText\":\"myPhoneFilter_labelText__+v0CO\",\"formInput\":\"myPhoneFilter_formInput__8OkR1\",\"inputText\":\"myPhoneFilter_inputText__XoiSH\"};","import { useSelector, useDispatch } from \"react-redux\";\n\nimport { setFilter } from \"./../../redux/filter/filter-slice\";\nimport { getFilter } from \"./../../redux/filter/filter-selectors\";\n\nimport css from \"./myPhoneFilter.module.css\"\n\nconst MyPhoneFilter = () => {\nconst filter = useSelector(getFilter);\n\nconst dispatch = useDispatch();\n\n    const handleFilter = ({ target }) => {\n        dispatch(setFilter(target.value));\n    }\n\n    return (\n        <div className={css.formInput}>\n            <label className={css.labelText}>Find contacts by name</label>\n            <input className={css.inputText}\n                onChange={handleFilter}\n                type=\"text\"\n                name=\"filter\"\n                value={filter}\n             />\n        </div>\n    )\n}\n\nexport default MyPhoneFilter;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"myPhone_title__0V57h\",\"titlePage\":\"myPhone_titlePage__2NwgJ\",\"wrapper\":\"myPhone_wrapper__OfZJq\",\"blockFilter\":\"myPhone_blockFilter__A0VoF\",\"block\":\"myPhone_block__tSoc6\",\"blockContacts\":\"myPhone_blockContacts__H3Nma\"};","import MyPhoneForm from \"./MyPhoneForm/MyPhoneForm\";\nimport ContactsList from \"./ContactsList/ContactsList\";\nimport MyPhoneFilter from \"./MyPhoneFilter/MyPhoneFilter\";\n\nimport css from \"./myPhone.module.css\";\n\nconst MyPhone = () => {\n\n        return (\n            <div>\n                <h2 className={css.titlePage}>Contacts of worcers of caffe Expresso</h2>\n                <div className={css.blockFilter}>\n                    <MyPhoneFilter/> \n                </div>\n                \n                <div className={css.wrapper}>\n                    <div className={css.block}>\n                        <h3 className={css.title}>PhoneBook</h3>\n                        <MyPhoneForm />\n                    </div>\n                    <div className={css.blockContacts}>\n                        <h3 className={css.title}>Contacts</h3>\n                        <ContactsList/>                         \n                    </div>\n                </div>\n            </div>\n        )\n    }\n\nexport default MyPhone; ","import MyPhone from \"components/MyPhone/MyPhone\";\n\nconst AllPhonePage = () => {\n    return (\n        <>\n            <MyPhone/>\n        </>\n    )\n}\n\nexport default AllPhonePage;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"message_title__MgS1b\"};","import PropTypes from \"prop-types\";\n\nimport css from \"./message.module.css\";\n\nconst Message = ({ message }) => {\n    return(\n  <h3 className={css.title}>{message}</h3>\n    )\n}\n\nexport default Message;\n\nMessage.propTypes = {\n    message: PropTypes.string.isRequired,\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["getAllPhones","store","phones","getHomePhones","filter","home","getWorkPhones","work","filterContacts","normFilter","toLowerCase","name","number","includes","Button","children","onClick","type","className","css","defaultProps","prototypes","PropTypes","useState","initialState","state","setState","allPhones","useSelector","dispatch","useDispatch","handleChange","target","value","checked","newValue","prevState","action","onSubmit","e","preventDefault","normName","normNumber","person","find","Boolean","isDublicate","alert","addContact","onChange","pattern","title","placeholder","required","ContactsList","contacts","phone","map","id","removeContact","deleteContact","phonesFilter","isPerson","length","Message","message","defaultPrors","getFilter","setFilter","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}